DIR="${XDG_CONFIG_HOME:-$HOME/.config}/mksh"
source $DIR/functions
source $DIR/alias

HISTFILE="$XDG_DATA_HOME/mksh-history"
HISTSIZE=10000

# Launch X on tty1 after login
if [ -z "$DISPLAY" ] && [ "$(fgconsole)" -eq 1 ]; then
  startx /usr/bin/i3 > /dev/null 2>&1
fi

# Less config
export LESS_TERMCAP_mb=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_md=$'\E[1;36m'     # begin blink
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_so=$'\E[01;44;33m' # begin reverse video
export LESS_TERMCAP_se=$'\E[0m'        # reset reverse video
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline

# Bindings
bind -m '^R'='^E^[ hist_search^[^E'
bind '^L'='clear-screen'

# Shell settings
set -o utf8-mode

# Prompt. Shows background jobs, exit codes, current directory($HOME as ~),
_prompt_dir () {
  local dir=${PWD#$HOME}
  case $PWD in
    ${HOME}*) echo -n '~'"$dir" ;;
    *) echo -n "$PWD" ;;
  esac
}

_prompt_job () {
  if [ "$(jobs)" ]; then
    echo -n "#$(jobs | wc -l) "
  fi
}

_prompt_error () {
  if [ $? -ne 0 ];then
    echo -n "!${?} "
  fi
}

PS1="[\$(_prompt_error)\$(_prompt_job)\$(_prompt_dir)]$ "

# Launch fasd. I should do it after defining PS1 because fasd puts it's code there
eval "$(fasd --init posix-hook posix-alias)"
